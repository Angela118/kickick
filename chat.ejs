<!doctype html>
<html lang="kr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <link href="../css/bootstrap.min.css" rel="stylesheet">
    <link href="../css/common.css" rel="stylesheet">
    <link href="../css/FRAME.css" rel="stylesheet">
    <link href="../css/chat.css" rel="stylesheet">

    <!-- Bootstrap core JavaScript -->
    <script src="../js/jquery.js"></script>
    <script src="../js/bootstrap.bundle.min.js"></script>
    <script src="jquery-3.1.1.min.js"></script>  
    <script src="socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.1/socket.io.dev.js"></script>
    
    <script>
        var socket;
        var writer;
        //jquery에서 문서가 다 로딩 되었을 때 호출되는 함수
        $(function(){
            connect();
            login();
        });
        
        function connect(){
            var host = '192.168.29.111';  // $('#hostInput').val(); //203.153.146.124
            var port = 3000;  // $('#portInput').val();
            //서버에 접속
            connectToServer(host, port);
        }
        function connectToServer(host, port){
            var url = 'http://' + host + ':' + port;
            var options = {
                forceNew:true   //연결이 끊어질 때마다 새로운 연결을 만들어라
            };
            socket = io.connect(url, options);   //socket객체 생성
            socket.on('connect'/*connect 이벤트 발생*/, function(){
                console.log('웹소켓 서버에 연결됨 -> ' + url);
            });
            socket.on('disconnect'/*disconnect 이벤트 발생*/, function(){
                console.log('웹소켓 연결 종료됨.');
            });
            
            
            socket.on('message', function(message){
                //println('수신 -> ' + JSON.stringify(message));
      //      $(output).prependTo('#content');
                if(message.sender == receiver)
                    writer = 'you';
                else
                 writer = 'me';
                addToChatting(writer, message.data); //message.email
            });
      
         socket.on('preload',function(dbData){
            addToChatting(writer, dbData.message); //dbData.email
           });

        }
        
        function login(){
            var id = '<%= email %>';
            var teamname = '<%= teamname %>';
            var today = new Date();
            
            var output = {
                id:id,
                teamname:teamname,
                today:today
            };
         
            socket.emit('login', output);
        }
        
        function send(){
            var email = '<%= email %>';
            var sender = '<%= teamname %>';   //senderInput 입력상자에서 입력 값 가져오기
//          var recipient = $('#recipientInput').val();
            var rec = '<%= rEmail %>';
            var recipient = $('#rec').val();
            var receiver = '<%= rTeamname %>';
            
            var data = $('#dataInput').val();
            var chattype = $('#chattype option:selected').val();
            var message = {
                email:email,
                sender:sender,
                recipient:recipient, //'ALL
                
                command:chattype,
                data:data,
                type:'text'
            };
            socket.emit('message', message);
            
            addToChatting(writer, message.data); //message.email
        }
      
       
      function addToChatting(writer, msg) {
         var contents = "<li class="+ writer +">"
                       +"<div class='msg'"+"<p>"+msg+"</p>"
                       +"</li>";
          $(".chatting").append(contents);
          
          var objDiv = document.getElementById("chatting");
          objDiv.scrollTop = objDiv.scrollHeight;
      }
      
        function println(data){      //상태 프린트
     //       console.log(data);
            $('#chatting').append('<p>' + data + '</p>');
        }      
        
        
      
      function clearText(field) {
            field.value="";
        }
      
      
        
    </script>
    

    <title>채팅방</title>
</head>
<!--메뉴 영역 시작 : 나중에 파일로 따로 빼기 -->
<!--여기선 메뉴명 채팅방으로 되어 있음-->
    
    
<body class="whiteB">
   
<script type="text/javascript">
    function goBack(){
        window.history.back();
    }
</script>
    
<nav class="navbar blueB">

    <div class="top">
        <div>
            <img src="../img/left-arrow.png" alt="" width="20rem" height="20rem" style="margin-right:3rem" onclick="goBack()">

            <p class="logo ml-sm-3">채팅방</p>
        </div>
      
      <div>
            <img src="../img/menu.png" width="20rem" height="20rem" class="navbar-toggler" data-toggle="collapse" data-target="#navbarsExample01" aria-controls="navbarsExample01" aria-expanded="false" aria-label="Toggle navigation">
        </div>

        <div class="collapse navbar-collapse" id="navbarsExample01">
         <ul class="navbar-nav mr-auto">
               <li class="nav-item">
               <a class="nav-link" href="/chatroom">
                  <b>매칭 중단 / 채팅방 나가기</b><br>
                  <span style="text-decoration: line-through">경기 스케줄란에서 평가를 안 하고 중간에 나갈 시, 우리 팀이 받은 평가를 볼 수 없습니다.</span>
                    </a>
            </li>
           </ul>
       </div>
   </div>
</nav>

<div class="py-4 text-center"></div>

<!--메뉴 영역 끝 : 나중에 파일로 따로 빼기 -->

<style>
    #mydiv{
        background-color:#e5e5e5;
    }
</style>

<div id="mydiv">
    <div class="chatting" id="chatting" style="height:74vh;"></div>
</div>

<div class="mb-3" style="display: flex; margin-left: .5rem; margin-right: .5rem; justify-content: space-between; align-items: center">
    <img src="../img/add.png" id="add_button" width="30rem" height="30rem" alt="" style="margin-right: 1rem">
        <input type="text" class="form-control" id="dataInput" placeholder="내용을 입력해주세요."  style="margin-right: .5rem" onFocus="clearText(this)">
        <button type="submit" class="btn btn-warning" id="text_button" onclick="send()">전송</button>
   
   <script>
       // $(".add_button_content").hide();
      $("#add_button").click(function(){
         $("#add_button_content").toggle();
         var add = '../img/add.png';
           var close = '../img/close-button.png';
           if($('#add_button').attr('src') === add) {
            $('#add_button').attr('src', close);
         } else {
            $('#add_button').attr('src', add);
         }
       });
   </script>
</div>

<div id="add_button_content" style="display: flex; margin-left: .5rem; margin-right: .5rem; justify-content: space-around;">
 
   
<!--팀원 하게 되면 경기 끝 넣기-->
  <!--주장만 - 경기 끝 버튼 없음. 아래 버튼 없이 + 누르면 바로 알림창 또는 하단에 입력창 뜨게 만들어도 됨-->
 
    <button class="btn btn-block" style="color:black" onclick="movePage()">
        시간 장소 정하기
    </button>
    <script>
        function movePage() {
            location.href = "/chatappointment";
        }
    </script>

    
</div>

</body>
</html>