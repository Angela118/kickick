<!doctype html>
<html lang="kor">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>세부 시간/장소 정하기</title>

    <link href="../css/bootstrap.min.css" rel="stylesheet">
    <link href="../css/common.css" rel="stylesheet">
    <link href="../css/chat.css" rel="stylesheet">
    
  <!-- Custom styles for this template -->
  <style>
    .navbar{
      padding:1rem 0rem;
    }
  </style>

</head>


<body class="whiteB">

<script type="text/javascript">
    function goBack(){
        window.history.back();
    }
</script>

    
<nav class="navbar blueB">
  <div style="display: flex; justify-content: space-between; align-items: center;  margin-left:1rem; margin-right:1rem;">
    <img src="../img/left-arrow.png" alt="" width="20rem" height="20rem" style="margin-right:3rem;" onclick="goBack();">
    <p class="logo whiteW">세부 시간/장소 정하기</p>
  </div>
</nav>


<div class="container" id="mySize">  
    <form action="/chatappointment" method="post">
    <div class="fit">
        <div>날짜</div>
        <input type="date" name="event_date" id="theDate" class="form-control mt-2">
    </div>
     
    <script>
        $(document).ready(function() {
            var date = new Date();
            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();
            
            if (month < 10) month = "0" + month;
            if (day < 10) day = "0" + day;
            
            var today = year + "-" + month + "-" + day;  
            $("#theDate").attr("value", today)
        });
    </script>
    
    <div class="fit">
        <div>시간</div>
        <input type="time" name="event_time" class="form-control" value="00:00:00" step="600">
        <p style="text-align: center; margin-bottom: 0">
    </div>
    
    <div class="fit">
        <div>장소</div>
        <input type="text" name="place" id="sample5_address" placeholder="주소" readonly/>
					<input type="button" onclick="sample5_execDaumPostcode()" value="주소 검색">
						
					<input name="resultLat" id="resultLat" placeholder="위도" class="form-control" readonly/ > 
					<input name="resultLng" id="resultLng" placeholder="경도" class="form-control" readonly/ >
					<br>
			<div id="map" style="width:300px;height:300px;margin-top:10px;display:none"></div>

			<script src="http://dmaps.daum.net/map_js_init/postcode.v2.js"></script>
			<script src="//dapi.kakao.com/v2/maps/sdk.js?appkey=df8f5565b51994aa9c71d2128dcdfec5&libraries=services"></script>
			<script>
				
				var mapContainer = document.getElementById('map'), // 지도를 표시할 div
        			mapOption = {
						center: new daum.maps.LatLng(37.537187, 127.005476), // 지도의 중심좌표
						level: 5 // 지도의 확대 레벨
					};

				//지도를 미리 생성
				var map = new daum.maps.Map(mapContainer, mapOption);
				//주소-좌표 변환 객체를 생성
				var geocoder = new daum.maps.services.Geocoder();
    			//마커를 미리 생성
				var marker = new daum.maps.Marker({
					position: new daum.maps.LatLng(37.537187, 127.005476),
					map: map
				});


				function sample5_execDaumPostcode() {
					new daum.Postcode({
						oncomplete: function(data) {
							// 각 주소의 노출 규칙에 따라 주소를 조합한다.
							// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
							var fullAddr = data.address; // 최종 주소 변수
							var extraAddr = ''; // 조합형 주소 변수

							// 기본 주소가 도로명 타입일때 조합한다.
							if(data.addressType === 'R'){
								//법정동명이 있을 경우 추가한다.
								if(data.bname !== ''){
									extraAddr += data.bname;
								}
								// 건물명이 있을 경우 추가한다.
								if(data.buildingName !== ''){
									extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
								}
								// 조합형주소의 유무에 따라 양쪽에 괄호를 추가하여 최종 주소를 만든다.
								fullAddr += (extraAddr !== '' ? ' ('+ extraAddr +')' : '');
							}

							// 주소 정보를 해당 필드에 넣는다.
							document.getElementById("sample5_address").value = fullAddr;
							// 주소로 상세 정보를 검색
							geocoder.addressSearch(data.address, function(results, status) {
								// 정상적으로 검색이 완료됐으면
								if (status === daum.maps.services.Status.OK) {

									var result = results[0]; //첫번째 결과의 값을 활용
									
									// 해당 주소에 대한 좌표를 받아서
									var coords = new daum.maps.LatLng(result.y, result.x);
									
				
									var geoLat = result.y;
									var geoLng = result.x;
									
									var resultLat = document.getElementById('resultLat');
									resultLat.value = geoLat;
									var resultLng = document.getElementById('resultLng');
									resultLng.value = geoLng;
									
									// 지도를 보여준다.
									mapContainer.style.display = "block";
									map.relayout();
									// 지도 중심을 변경한다.
									map.setCenter(coords);
									// 마커를 결과값으로 받은 위치로 옮긴다.
									marker.setPosition(coords)
								}
							});
						}
					}).open();
				}
				
			</script>
        </div>
    
    <div class="fit">
        <div>우리 팀 참여 인원 수</div>
        <input type="text" name="event_nofteam" placeholder="<%= nofteam %>" class="form-control mt-2">
    </div>
    
    
    <footer class="fit">
        <center><button type="submit" class="btn btn-secondary">저장</button>
        <button type="button" class="btn btn-secondary" onclick="movePage();">취소</button></center>
        <script>
        function movePage() {
            location.href = "/chat";
        }
    </script>
    </footer>
    

    </form>
        </div>
</body>
</html>